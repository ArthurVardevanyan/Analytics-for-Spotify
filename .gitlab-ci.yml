# WIP, TESTING ONLY, DO NOT DEPLOY
stages:
  - test
  - build
  - push

PythonTests:
  stage: test
  image: python:slim
  services:
    - mariadb:latest
  variables:
    TEST: test
    MARIADB_ROOT_PASSWORD: root
    MARIADB_DATABASE: spotify
  before_script:
    - |
      echo "[client]
      host = mariadb
      database = spotify
      user = root
      password = root
      default-character-set = utf8"> AnalyticsforSpotify/my.cnf
    - apt-get update
    - apt-get install -y libmariadb-dev gcc
    - python -m pip install --upgrade pip
    - pip3 install -r requirements.txt
  script:
    - python3 manage.py test

image: docker:latest

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
services:
  - name: docker:dind

DockerBuild:
  stage: build

  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

PushLatest:
  variables:
    GIT_STRATEGY: none
  stage: push
  only:
    - production
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest

PushDevelop:
  variables:
    GIT_STRATEGY: none
  stage: push
  only:
    - develop
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:develop
    - docker push $CI_REGISTRY_IMAGE:develop
