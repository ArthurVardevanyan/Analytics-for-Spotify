# WIP, TESTING ONLY, DO NOT DEPLOY
# include:
#   #- template: Security/Secret-Detection.gitlab-ci.yml
#   #- template: Security/SAST.gitlab-ci.yml
#   #- template: Security/SAST-IaC.latest.gitlab-ci.yml

variables:
  SCAN_KUBERNETES_MANIFESTS: "true"

stages:
  - image
  - test
  - build
  - deploy

TestingImage:
  stage: image
  when: manual
  image: quay.io/buildah/stable:v1.23.4
  before_script:
    - buildah login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - buildah pull $CI_REGISTRY_IMAGE:test || true
    - buildah bud --network host -f docker/dockerfile --cache-from $CI_REGISTRY_IMAGE:test -t $CI_REGISTRY_IMAGE:test .
    - buildah push $CI_REGISTRY_IMAGE:test

PythonTests:
  stage: test
  image: $CI_REGISTRY_IMAGE:test
  services:
    - name: mariadb:latest
  variables:
    TEST: test
    MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
    MARIADB_DATABASE: spotify
  before_script:
    - export DB_HOST=mariadb
    - export DATABASE=spotify
    - export DB_USER=${MARIADB_ROOT_PASSWORD}
    - export DB_PASSWORD=${MARIADB_ROOT_PASSWORD}
    - sleep 10
  script:
    - coverage run --source='./monitoringBackend,./webBackend'  manage.py test
    - coverage report -m

DockerBuild:
  stage: build
  image: quay.io/buildah/stable:v1.23.3
  except:
    refs:
      - tags
  before_script:
    - buildah login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - buildah pull $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH || true
    - buildah bud --network host -f dockerfile --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - buildah push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - buildah tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH
    - buildah push $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH

DeployKubernetes:
  stage: deploy
  image: ${IMAGE}
  environment: production
  only:
    - develop
    - production
  script:
    - sed -i "s,<IMAGE>,${CI_REGISTRY_IMAGE},g" kubernetes/base/deployment.yaml
    - sed -i "s/<VERSION>/${CI_COMMIT_SHA}/g" kubernetes/base/deployment.yaml

    - CLIENT_ID=$(echo -n ${CLIENT_ID} | base64 -w 0 | tr -d \\n)
    - CLIENT_SECRET=$(echo -n ${CLIENT_SECRET} | base64 -w 0 | tr -d \\n)
    - REDIRECT_URL=$(echo -n ${REDIRECT_URL} | base64 -w 0 | tr -d \\n)
    - DB_HOST=$(echo -n ${DB_HOST} | base64 -w 0 | tr -d \\n)
    - DATABASE=$(echo -n ${DATABASE} | base64 -w 0 | tr -d \\n)
    - DB_USER=$(echo -n ${DB_USER} | base64 -w 0 | tr -d \\n)
    - DB_PASSWORD=$(echo -n ${DB_PASSWORD} | base64 -w 0 | tr -d \\n)

    - sed -i "s,<CLIENT_ID>,${CLIENT_ID},g" kubernetes/base/secret.yaml
    - sed -i "s/<CLIENT_SECRET>/${CLIENT_SECRET}/g" kubernetes/base/secret.yaml
    - sed -i "s,<REDIRECT_URL>,${REDIRECT_URL},g" kubernetes/base/secret.yaml
    - sed -i "s,<DB_HOST>,${DB_HOST},g" kubernetes/base/secret.yaml
    - sed -i "s,<DATABASE>,${DATABASE},g" kubernetes/base/secret.yaml
    - sed -i "s,<DB_USER>,${DB_USER},g" kubernetes/base/secret.yaml
    - sed -i "s,<DB_PASSWORD>,${DB_PASSWORD},g" kubernetes/base/secret.yaml

    - sed -i "s/<URL>/${URL}/g" kubernetes/overlays/k3s/traefik.yaml
    - sed -i "s/<URL>/${URL}/g" kubernetes/overlays/okd/route.yaml

    - kubectl apply -k  kubernetes/overlays/okd
