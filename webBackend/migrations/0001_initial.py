# Generated by Django 3.2 on 2021-08-20 13:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artists',
            fields=[
                ('id', models.CharField(max_length=22, primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'artists',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Playlists',
            fields=[
                ('playlistID', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('lastupdated', models.TextField(db_column='lastUpdated')),
            ],
            options={
                'db_table': 'playlists',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Songs',
            fields=[
                ('id', models.CharField(max_length=22, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('tracklength', models.BigIntegerField(db_column='trackLength')),
            ],
            options={
                'db_table': 'songs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SpotifyAPI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api', models.TextField()),
            ],
            options={
                'db_table': 'spotifyAPI',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Workers',
            fields=[
                ('worker', models.IntegerField(primary_key=True, serialize=False)),
                ('lastUpdated', models.BigIntegerField()),
                ('creationTime', models.TextField()),
                ('updatedTime', models.TextField()),
            ],
            options={
                'db_table': 'workers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('enabled', models.IntegerField()),
                ('statussong', models.IntegerField(db_column='statusSong')),
                ('statusplaylist', models.IntegerField(db_column='statusPlaylist')),
                ('cache', models.TextField()),
                ('realtime', models.IntegerField(db_column='realTime')),
                ('worker', models.ForeignKey(blank=True, db_column='worker', null=True, on_delete=django.db.models.deletion.SET_NULL, to='webBackend.workers')),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Playlistsusers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlistID', models.ForeignKey(db_column='playlistID', on_delete=django.db.models.deletion.RESTRICT, to='webBackend.playlists')),
                ('user', models.ForeignKey(db_column='user', on_delete=django.db.models.deletion.RESTRICT, to='webBackend.users')),
            ],
            options={
                'db_table': 'playlistsUsers',
                'managed': True,
                'unique_together': {('playlistID', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Playlistsongs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('songstatus', models.TextField(db_column='songStatus')),
                ('playlistID', models.ForeignKey(db_column='playlistID', on_delete=django.db.models.deletion.RESTRICT, to='webBackend.playlists')),
                ('songID', models.ForeignKey(db_column='songID', on_delete=django.db.models.deletion.RESTRICT, to='webBackend.songs')),
            ],
            options={
                'db_table': 'playlistSongs',
                'managed': True,
                'unique_together': {('playlistID', 'songID')},
            },
        ),
        migrations.CreateModel(
            name='Playcount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playcount', models.IntegerField(db_column='playCount', default=1)),
                ('songid', models.ForeignKey(db_column='songID', on_delete=django.db.models.deletion.RESTRICT, to='webBackend.songs')),
                ('user', models.ForeignKey(db_column='user', on_delete=django.db.models.deletion.RESTRICT, to='webBackend.users')),
            ],
            options={
                'db_table': 'playcount',
                'managed': True,
                'unique_together': {('user', 'songid')},
            },
        ),
        migrations.CreateModel(
            name='Listeninghistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.BigIntegerField()),
                ('timeplayed', models.TextField(db_column='timePlayed')),
                ('songid', models.ForeignKey(db_column='songID', on_delete=django.db.models.deletion.RESTRICT, to='webBackend.songs')),
                ('user', models.ForeignKey(db_column='user', on_delete=django.db.models.deletion.RESTRICT, to='webBackend.users')),
            ],
            options={
                'db_table': 'listeningHistory',
                'managed': True,
                'unique_together': {('timestamp', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Songartists',
            fields=[
                ('songID', models.OneToOneField(db_column='songID', on_delete=django.db.models.deletion.RESTRICT, primary_key=True, serialize=False, to='webBackend.songs')),
                ('artistID', models.ForeignKey(db_column='artistID', on_delete=django.db.models.deletion.RESTRICT, to='webBackend.artists')),
            ],
            options={
                'db_table': 'songArtists',
                'managed': True,
                'unique_together': {('songID', 'artistID')},
            },
        ),
    ]

