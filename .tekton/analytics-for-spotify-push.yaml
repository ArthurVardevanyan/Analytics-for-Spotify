---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: analytics-for-spotify-push
  annotations:
    pipelinesascode.tekton.dev/max-keep-runs: "1"
    pipelinesascode.tekton.dev/on-cel-expression: |
      event == "push" && (target_branch == "refs/heads/production" || target_branch == "production")
    pipelinesascode.tekton.dev/target-namespace: "analytics-for-spotify"
    pipelinesascode.tekton.dev/task: "tekton/base/unit-test.yaml"
    pipelinesascode.tekton.dev/task-1: "https://tekton-hub-api-openshift-pipelines.apps.okd.arthurvardevanyan.com/v1/resource/homelab/task/git-clone/0.9.1/raw"
    pipelinesascode.tekton.dev/task-2: "https://tekton-hub-api-openshift-pipelines.apps.okd.arthurvardevanyan.com/v1/resource/homelab/task/buildah/0.5.1/raw"
    pipelinesascode.tekton.dev/task-3: "https://tekton-hub-api-openshift-pipelines.apps.okd.arthurvardevanyan.com/v1/resource/homelab/task/deployment/0.1.1/raw"
spec:
  params:
    - name: git-url
      value: "{{ repo_url }}"
    - name: git-commit
      value: "{{ revision }}"
    - name: DOCKERFILE
      value: "./containerfile"
    - name: IMAGE
      value: "registry.arthurvardevanyan.com/apps/analytics-for-spotify:{{ revision }}"
  pipelineSpec:
    params:
      - name: git-url
        description: Repository URL to clone from.
        type: string
      - name: git-commit
        type: string
      - name: IMAGE
        description: Reference of the image buildah will produce.
      - name: DOCKERFILE
        description: Path to the Dockerfile to build.
        type: string
        default: ./Dockerfile

    workspaces:
      - name: data
      - name: git_auth_secret

    tasks:
      - name: git-clone
        taskRef:
          name: git-clone
          kind: Task
        params:
          - name: url
            value: $(params.git-url)
          - name: revision
            value: $(params.git-commit)
        workspaces:
          - name: output
            workspace: data
          - name: basic-auth
            workspace: git_auth_secret

      - name: unit-test
        runAfter:
          - git-clone
        taskRef:
          name: unit-test
          kind: Task
        workspaces:
          - name: data
            workspace: data

      - name: buildah
        runAfter:
          - unit-test
        taskRef:
          name: buildah
          kind: Task
        params:
          - name: IMAGE
            value: $(params.IMAGE)
          - name: DOCKERFILE
            value: $(params.DOCKERFILE)
        workspaces:
          - name: source
            workspace: data

      - name: deploy
        runAfter:
          - buildah
        taskRef:
          name: deploy
          kind: k8s-deploy
        workspaces:
          - name: data
            workspace: data
        params:
          - name: git-commit
            value: $(params.git-commit)
          - name: vault-path
            value: analytics-for-spotify

  serviceAccountName: pipeline
  workspaces:
    - name: data
      volumeClaimTemplate:
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: "250Mi"
          storageClassName: longhorn
    - name: git_auth_secret
      secret:
        secretName: "{{ git_auth_secret }}"
