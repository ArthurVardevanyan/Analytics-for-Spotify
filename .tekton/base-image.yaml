---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: base-image
  annotations:
    pipelinesascode.tekton.dev/max-keep-runs: "1"
    pipelinesascode.tekton.dev/on-cel-expression: |
      (target_branch == "develop") && "container/containerfile".pathChanged()
    # event == "pull_request" &&
    pipelinesascode.tekton.dev/target-namespace: "analytics-for-spotify"
spec:
  params:
    - name: git-url
      value: "{{ repo_url }}"
    - name: git-commit
      value: "{{ revision }}"
    - name: DOCKERFILE
      value: "./container/containerfile"
    - name: IMAGE
      value: "registry.arthurvardevanyan.com/apps/analytics-for-spotify:base"
  pipelineSpec:
    params:
      - name: git-url
        description: Repository URL to clone from.
        type: string
      - name: git-commit
        type: string
      - name: IMAGE
        description: Reference of the image buildah will produce.
      - name: DOCKERFILE
        description: Path to the Dockerfile to build.
        type: string
        default: ./Dockerfile

    workspaces:
      - name: data
      - name: git_auth_secret

    tasks:
      - name: git-clone
        taskRef:
          name: git-clone
          kind: ClusterTask
        params:
          - name: url
            value: $(params.git-url)
          - name: revision
            value: $(params.git-commit)
        workspaces:
          - name: output
            workspace: data
          - name: basic-auth
            workspace: git_auth_secret

      - name: buildah
        runAfter:
          - git-clone
        taskRef:
          name: buildah
          kind: ClusterTask
        params:
          - name: IMAGE
            value: $(params.IMAGE)
          - name: DOCKERFILE
            value: $(params.DOCKERFILE)
        workspaces:
          - name: source
            workspace: data

  serviceAccountName: pipeline
  workspaces:
    - name: data
      volumeClaimTemplate:
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: "100Mi"
          storageClassName: longhorn
    - name: git_auth_secret
      secret:
        secretName: "{{ git_auth_secret }}"
